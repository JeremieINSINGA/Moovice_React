{"version":3,"sources":["placeholder.png","picture1.png","picture2.png","vs.png","components/core/Button.js","components/Navbar.js","components/core/Icon.js","Config.js","components/movie/Card.js","components/Discover.js","components/DiscoverBattle.js","components/Popular.js","components/PopularBattle.js","components/MyList.js","components/actor/CardActor.js","components/movie/Details.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","children","onClick","type","className","Navbar","props","onClickButtonLanguage","bind","language","this","onChangeLanguage","thisWeek","thisWeekBattle","popular","popularBattle","myList","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","activeClassName","to","Component","Icon","onClickFavorite","icon","Config","API_ROOT","IMG_ROOT","TRAILER_ROOT","API_KEY","Card","state","idMoviesList","getLocalStorage","localStorage","getItem","JSON","parse","onClickCard","movie","idMovie","result","filter","setState","setItem","stringify","isLink","src","alt","poster","title","placeholder","releaseDate","includes","key","date","TODAY","moment","format","NEXT_WEEK","add","Discover","movies","value","chargedMovies","prevProps","url","fetch","then","response","json","movieTemp","results","map","poster_path","release_date","push","idClicked","goToDetails","DiscoverBattle","currentMovie","onClickCardBattle","itemTemp","item","saveToLocalStorage","storageStr","displayMovies","slice","favoriteChoose","i","Popular","indexOf","PopularBattle","console","log","MyList","moviesList","Promise","all","res","data","forEach","notFavorite","index","CardActor","actor","profile","name","gender","picture1","picture2","character","Details","detailsMovie","trailerMovie","actors","arrUrl","document","location","split","length","chargedDetailsMovie","chargedActors","originalTitle","original_title","description","overview","genres","urlTrailer","undefined","urlActor","actorTemp","cast","profile_path","returnButton","genre","data-src","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","allowscriptaccess","allow","NotFound","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38491aa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.aaae2c16.png\";","module.exports = __webpack_public_path__ + \"static/media/picture1.1f3446ab.png\";","module.exports = __webpack_public_path__ + \"static/media/picture2.6035261d.png\";","module.exports = __webpack_public_path__ + \"static/media/vs.254cfe0a.png\";","import React from 'react';\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    return (\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-light mt-3\" \r\n            onClick={onClick}>\r\n                {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Button from './core/Button';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onClickButtonLanguage = this.onClickButtonLanguage.bind(this);\r\n    }\r\n    \r\n\r\n    onClickButtonLanguage() {\r\n        // console.log(\"Navbar#OnClick\")\r\n        let language = ''\r\n        if (this.props.language === 'en') {\r\n            language = 'fr'\r\n        } else if (this.props.language === 'fr') {\r\n            language = 'en'\r\n        }\r\n        this.props.onChangeLanguage(language)\r\n    }\r\n\r\n    render() {\r\n        let { language } = this.props;\r\n        let thisWeek = '';\r\n        let thisWeekBattle = '';\r\n        let popular = '';\r\n        let popularBattle = '';\r\n        let myList = '';\r\n        if (language === \"fr\") {\r\n            language = 'en';\r\n            thisWeek = 'Cette Semaine';\r\n            thisWeekBattle = 'Battle de la semaine';\r\n            popular = 'Populaire';\r\n            popularBattle = 'Battle populaire';\r\n            myList = 'Ma Liste';\r\n        } else if (language === 'en') {\r\n            language = 'fr';\r\n            thisWeek = 'This Week';\r\n            thisWeekBattle = 'This Week Battle';\r\n            popular = 'Popular';\r\n            popularBattle = 'Popular Battle';\r\n            myList = 'My List';\r\n        }\r\n\r\n        return(\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">Moovice</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/\"> \r\n                                {thisWeek}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/week_battle\"> \r\n                                {thisWeekBattle}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/popular\"> \r\n                                {popular}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/popular_battle\"> \r\n                                {popularBattle}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/my_list\"> \r\n                                {myList}\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"nav navbar-nav navbar-right\">\r\n                        <Button\r\n                            onClick={this.onClickButtonLanguage}\r\n                        >\r\n                            {language}\r\n                        </Button>\r\n                    </ul>\r\n                </div>                \r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\n\r\nclass Icon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick(id) {\r\n        this.props.onClickFavorite(id)\r\n    }\r\n\r\n    render() {\r\n        const { icon, id } = this.props\r\n        return(\r\n            <span className=\"material-icons\" onClick={() => {this.onClick(id)}}>\r\n                {icon}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Icon;","const Config = {\r\n    API_ROOT: 'https://api.themoviedb.org/3/',\r\n    IMG_ROOT: 'https://image.tmdb.org/t/p/w300',\r\n    TRAILER_ROOT: 'https://www.youtube.com/embed/',\r\n    API_KEY: 'd15480851b1c788638106a997f9e5127'\r\n};\r\n\r\nexport default Config;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Icon from '../core/Icon';\r\nimport placeholder from '../../placeholder.png';\r\nimport Config from '../../Config';\r\n\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idMoviesList: this.getLocalStorage(),\r\n        }\r\n        this.onClick            = this.onClick.bind(this);\r\n        this.onClickFavorite    = this.onClickFavorite.bind(this);\r\n    }\r\n\r\n    getLocalStorage() {\r\n        let idMoviesList    = localStorage.getItem('myList');\r\n        idMoviesList        = JSON.parse(idMoviesList);\r\n        return idMoviesList\r\n    }\r\n    \r\n    onClick() {\r\n        // console.log(this.props.movie.id);\r\n        this.props.onClickCard(this.props.movie.id);\r\n    }\r\n\r\n    onClickFavorite(idMovie) {\r\n        // console.log('Details#onClickFavortie idMovie', idMovie);\r\n        const result = this.state.idMoviesList.filter(id => id !== idMovie);\r\n        // console.log('Details#onClickFavorite result', result)\r\n\r\n        this.setState ({\r\n            idMoviesList : result\r\n        })\r\n        localStorage.setItem(\"myList\", JSON.stringify(result));\r\n\r\n    }\r\n\r\n    render() {\r\n        const { movie, language, isLink } = this.props;\r\n        // console.log(\"Card isLink\", isLink);\r\n        const { idMoviesList } = this.state;\r\n        let src = '';\r\n        let alt = '';\r\n        if (movie.poster !== null) {\r\n            src = Config.IMG_ROOT + movie.poster;\r\n            alt = 'Poster of ' + movie.title;\r\n        } else {\r\n            src = placeholder\r\n            alt = 'Poster of DVD'\r\n        }\r\n        let releaseDate = '';\r\n        if (language === \"en\") {\r\n            releaseDate = 'Release Date : ';\r\n        } else if (language === \"fr\") {\r\n            releaseDate = 'Date de Sortie : ';\r\n        }\r\n        let icon = '';\r\n        if (idMoviesList) {\r\n            if (idMoviesList.includes(movie.id)) {\r\n                icon = 'favorite'\r\n            } else {\r\n                icon = 'favorite_border'\r\n            }\r\n        } else {\r\n            icon = 'favorite_border'\r\n        }    \r\n\r\n        return(\r\n            <div className=\"card-favorite\">\r\n                <Icon \r\n                    onClickFavorite = {this.onClickFavorite}\r\n                    icon = {icon}\r\n                    id = {movie.id}\r\n                /> \r\n                {isLink ? (\r\n                    <Link to={`/movie_detail/${movie.id}`}>\r\n                        <div className=\"card\" onClick={this.onClick} key={movie.id}>\r\n                            <img src={src} className=\"card-img-top\" alt={alt} />\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-title\">{movie.title}</h6>\r\n                                <p className=\"card-text\">{releaseDate}{movie.date}</p>\r\n                            </div>  \r\n                        </div>\r\n                    </Link> \r\n                ):(\r\n                    <div className=\"card\" onClick={this.onClick} key={movie.id}>\r\n                        <img src={src} className=\"card-img-top\" alt={alt} />\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-title\">{movie.title}</h6>\r\n                            <p className=\"card-text\">{releaseDate}{movie.date}</p>\r\n                        </div>  \r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Card from './movie/Card';\r\nimport Config from '../Config';\r\n\r\nimport './Discover.css';\r\n\r\nconst TODAY = moment().format('YYYY-MM-DD')\r\nconst NEXT_WEEK = moment().add(7, 'days').format('YYYY-MM-DD');\r\n\r\nclass Discover extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [], \r\n            value: false,\r\n        }\r\n        this.onClickCard = this.onClickCard.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chargedMovies()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.chargedMovies()\r\n        }        \r\n    }\r\n\r\n    chargedMovies() {\r\n        const url = `${Config.API_ROOT}discover/movie?primary_release_date.gte=${TODAY}&primary_release_date.lte=${NEXT_WEEK}&language=${this.props.language}&api_key=${Config.API_KEY}`;\r\n        fetch(url).then((response) => response.json()).then(json => {\r\n            let movieTemp = {};\r\n            let movies = [];\r\n            json.results.map((movie) => {\r\n                movieTemp                = {};\r\n                movieTemp.id             = movie.id;\r\n                movieTemp.title          = movie.title;\r\n                movieTemp.poster         = movie.poster_path;\r\n                movieTemp.date           = movie.release_date;\r\n                movies.push(movieTemp);\r\n            })\r\n            this.setState({\r\n                movies\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    onClickCard(idClicked) {\r\n        this.goToDetails = true;\r\n        this.idClicked = idClicked;\r\n    }\r\n\r\n    render() {\r\n        const { language } = this.props;\r\n        let isLink  = \"true\";\r\n        let title   = \"\";\r\n        if (language === 'en') {\r\n            title = \"Discover\";\r\n        } else if (language === 'fr') {\r\n            title = \"Sortie de la Semaine\";\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">{title}</h1>\r\n                <div className=\"row text-center\">\r\n                        {this.state.movies.map((movie) => {\r\n                            return(\r\n                                <div className=\"col-12 col-lg-3\">\r\n                                    <Card \r\n                                        isLink={isLink}\r\n                                        movie={movie} \r\n                                        key={movie.id}\r\n                                        onClickCard={this.onClickCard}\r\n                                        language={language}                                        \r\n                                    />                                                       \r\n                                </div>\r\n                                )\r\n                            })\r\n                        }                   \r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Discover;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Card from './movie/Card';\r\nimport Config from '../Config';\r\n\r\nimport './DiscoverBattle.css';\r\n\r\nconst TODAY = moment().format('YYYY-MM-DD')\r\nconst NEXT_WEEK = moment().add(7, 'days').format('YYYY-MM-DD');\r\n\r\nclass DiscoverBattle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            currentMovie: 0,\r\n        }\r\n        this.onClickCardBattle = this.onClickCardBattle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chargedMovies();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.chargedMovies()\r\n        }        \r\n    }\r\n\r\n    chargedMovies() {\r\n        const url = `${Config.API_ROOT}discover/movie?primary_release_date.gte=${TODAY}&primary_release_date.lte=${NEXT_WEEK}&language=${this.props.language}&api_key=${Config.API_KEY}`;\r\n        fetch(url).then((response) => response.json()).then(json => {\r\n            let itemTemp = {};\r\n            let movies = [];\r\n            json.results.map((item) => {\r\n                itemTemp                = {};\r\n                itemTemp.id             = item.id;\r\n                itemTemp.title          = item.title;\r\n                itemTemp.poster         = item.poster_path;\r\n                itemTemp.date           = item.release_date;\r\n                movies.push(itemTemp);\r\n            })\r\n            this.setState({\r\n                movies\r\n            })\r\n        })\r\n    }\r\n\r\n    onClickCardBattle(idMovie) {\r\n        // console.log('PopularBattle#onClickCardBattle', idMovie);\r\n        let currentMovie = this.state.currentMovie + 2;\r\n        this.setState({\r\n            currentMovie\r\n        });\r\n        this.saveToLocalStorage(idMovie);\r\n    }\r\n\r\n    saveToLocalStorage(idMovie) {\r\n        const storageStr = localStorage.getItem('myList');\r\n        let myList = [];\r\n        if (storageStr !== null) {\r\n            myList = JSON.parse(storageStr);\r\n        }\r\n        if (myList.includes(idMovie) === false) {\r\n            myList.push(idMovie);\r\n        } \r\n        localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n    }\r\n    \r\n    render() {\r\n        const { language }  = this.props;\r\n        const { movies, currentMovie } = this.state;\r\n        let isLink = false;\r\n        let displayMovies   = movies.slice((currentMovie),(currentMovie + 2))\r\n        let favoriteChoose  = \"\";\r\n        let title           = \"\";\r\n        if (language === 'en') {\r\n            favoriteChoose  = \"Choose your favorite movie\";\r\n            title           = \"This Week Battle\";\r\n        } else if (language === 'fr') {\r\n            favoriteChoose  = \"Choisissez votre film favori\";\r\n            title           = \"Battle des sorties de la semaine\";\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">{title}</h1>\r\n                <h5 className=\"text-center mt-5\">{favoriteChoose}</h5>\r\n                <div className=\"row\">                    \r\n                    {displayMovies.map((movie, i) => {\r\n                        return(\r\n                            <div className=\"col-6\">\r\n                                <Card \r\n                                    isLink={isLink}\r\n                                    movie={movie} \r\n                                    key={movie.id}\r\n                                    onClickCard={this.onClickCardBattle}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiscoverBattle;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Card from './movie/Card';\r\nimport Config from '../Config';\r\n\r\nimport './Popular.css';\r\n\r\nclass Popular extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [], \r\n            value: false,\r\n            idMoviesList: this.getLocalStorage(),\r\n        }\r\n        this.onClickCard = this.onClickCard.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chargedMovies()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.chargedMovies()\r\n        }        \r\n    }\r\n\r\n    chargedMovies() {\r\n        const url = `${Config.API_ROOT}discover/movie?sort_by=popularity.desc&language=${this.props.language}&api_key=${Config.API_KEY}`;\r\n        fetch(url).then((response) => response.json()).then(json => {\r\n            let movieTemp = {};\r\n            let movies = [];\r\n            json.results.map((movie) => {\r\n                movieTemp                = {};\r\n                movieTemp.id             = movie.id;\r\n                movieTemp.title          = movie.title;\r\n                movieTemp.poster         = movie.poster_path;\r\n                movieTemp.date           = movie.release_date;\r\n                movies.push(movieTemp);\r\n            })\r\n            this.setState({\r\n                movies\r\n            })\r\n        })\r\n    }\r\n\r\n    getLocalStorage() {\r\n        let idMoviesList = localStorage.getItem('myList');\r\n        idMoviesList = JSON.parse(idMoviesList);\r\n        return idMoviesList\r\n    }\r\n\r\n    onClickCard(idClicked) {\r\n        this.idClicked = idClicked;\r\n    }\r\n\r\n    onClickFavorite(idMovie) {\r\n        if (this.state.idMoviesList) {\r\n            if (this.state.idMoviesList.indexOf(idMovie) !== -1) {\r\n                // console.log('this.state.idMoviesList.indexOf(idMovie)', this.state.idMoviesList.indexOf(idMovie))\r\n                const result = this.state.idMoviesList.filter(id => id !== idMovie);\r\n                this.setState ({\r\n                    idMoviesList : result\r\n                })\r\n                localStorage.setItem(\"myList\", JSON.stringify(result));\r\n            } else {\r\n                // console.log('onClickFavorite else')\r\n                const storageStr = localStorage.getItem('myList');\r\n                let myList = [];\r\n                if (storageStr !== null) {\r\n                    myList = JSON.parse(storageStr);\r\n                }\r\n                myList.push(idMovie);\r\n                localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n            }\r\n        } else {\r\n            const storageStr = localStorage.getItem('myList');\r\n            let myList = [];\r\n            if (storageStr !== null) {\r\n                myList = JSON.parse(storageStr);\r\n            }\r\n            myList.push(idMovie);\r\n            localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { language } = this.props;\r\n        const { movies } = this.state;\r\n        let isLink  = true;\r\n        let title   = \"\";\r\n        if (language === 'en') {\r\n            title = \"Popular\";\r\n        } else if (language === 'fr') {\r\n            title = \"Films Populaires\";\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">{title}</h1>\r\n                <div className=\"row text-center\">\r\n                        {movies.map((movie) => {\r\n                            return(\r\n                                <div className=\"col-12 col-lg-3\">\r\n                                    <Link to={`/movie_detail/${movie.id}`}>\r\n                                        <Card \r\n                                            isLink={isLink}\r\n                                            movie={movie} \r\n                                            key={movie.id}\r\n                                            onClickCard={this.onClickCard}\r\n                                            language={language}                                        \r\n                                        /> \r\n                                    </Link>                                                           \r\n                                </div>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popular;","import React, { Component } from 'react';\r\n\r\nimport Card from './movie/Card';\r\nimport Config from '../Config';\r\nimport Vs from '../vs.png';\r\n\r\nimport './PopularBattle.css';\r\n\r\nclass PopularBattle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            currentMovie: 0,\r\n        }\r\n        this.onClickCardBattle = this.onClickCardBattle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.chargedMovies();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.value !== this.props.value) {\r\n            this.chargedMovies()\r\n        }        \r\n    }\r\n\r\n    chargedMovies() {\r\n        const url = `${Config.API_ROOT}discover/movie?sort_by=popularity.desc&language=${this.props.language}&api_key=${Config.API_KEY}`;\r\n        fetch(url).then((response) => response.json()).then(json => {\r\n            let itemTemp = {};\r\n            let movies = [];\r\n            json.results.map((item) => {\r\n                itemTemp                = {};\r\n                itemTemp.id             = item.id;\r\n                itemTemp.title          = item.title;\r\n                itemTemp.poster         = item.poster_path;\r\n                itemTemp.date           = item.release_date;\r\n                movies.push(itemTemp);\r\n            })\r\n            this.setState({\r\n                movies\r\n            })\r\n        })\r\n    }\r\n\r\n    onClickCardBattle(idMovie) {\r\n        console.log('PopularBattle#onClickCardBattle', idMovie);\r\n        let currentMovie = this.state.currentMovie + 2;\r\n        this.setState({\r\n            currentMovie\r\n        });\r\n        this.saveToLocalStorage(idMovie);\r\n    }\r\n\r\n    saveToLocalStorage(idMovie) {\r\n        const storageStr = localStorage.getItem('myList');\r\n        let myList = [];\r\n        if (storageStr !== null) {\r\n            myList = JSON.parse(storageStr);\r\n        }\r\n        if (myList.includes(idMovie) === false) {\r\n            myList.push(idMovie);\r\n        } \r\n        localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n    }\r\n    \r\n    render() {\r\n        const { language }  = this.props;\r\n        const { movies, currentMovie } = this.state;\r\n        let isLink          = false;\r\n        let displayMovies   = movies.slice((currentMovie),(currentMovie + 2))\r\n        let favoriteChoose  = \"\";\r\n        let title           = \"\";\r\n        if (language === 'en') {\r\n            favoriteChoose  = \"Choose your favorite movie\";\r\n            title           = \"Popular Battle\";\r\n        } else if (language === 'fr') {\r\n            favoriteChoose  = \"Choisissez votre film favori\";\r\n            title           = \"Battle de films populaires\";\r\n        }\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">{title}</h1>\r\n                <h5 className=\"text-center mt-5\">{favoriteChoose}</h5>\r\n                <div className=\"row text-center justify-content-between\">                   \r\n                    {displayMovies.map((movie, i) => {\r\n                        return(\r\n                            <div className=\"col-6\">\r\n                                <Card \r\n                                    isLink={isLink}\r\n                                    movie={movie} \r\n                                    key={movie.id}\r\n                                    onClickCard={this.onClickCardBattle}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopularBattle;","import React, { Component } from 'react';\r\nimport Card from './movie/Card';\r\nimport './MyList.css';\r\n\r\nclass MyList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            moviesList: [],\r\n            idMoviesList: this.getLocalStorage(),\r\n        }\r\n        this.onClickCard = this.onClickCard.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const idMoviesList = this.state.idMoviesList;\r\n\r\n        const fetchMovie = (idMovie) => \r\n        fetch(`https://api.themoviedb.org/3/movie/${idMovie}?api_key=d15480851b1c788638106a997f9e5127&language=${this.props.language}`)\r\n            .then(res => res.json())\r\n            .then(data => data);\r\n        \r\n        let movieTemp = {};\r\n        let movies = [];\r\n\r\n        if (idMoviesList) {\r\n            Promise.all(this.state.idMoviesList.map(movie => fetchMovie(movie))).then((moviesList) => {\r\n                moviesList.forEach(movie => {\r\n                    movieTemp                = {};\r\n                    movieTemp.id             = movie.id;\r\n                    movieTemp.title          = movie.title;\r\n                    movieTemp.poster         = movie.poster_path;\r\n                    movieTemp.date           = movie.release_date;\r\n                    movies.push(movieTemp);\r\n                    this.setState({\r\n                        moviesList: movies,\r\n                    })\r\n                });  \r\n            });\r\n        }        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    getLocalStorage() {\r\n        let idMoviesList = localStorage.getItem('myList');\r\n        idMoviesList = JSON.parse(idMoviesList);\r\n        return idMoviesList\r\n    }\r\n\r\n    onClickCard(idClicked) {\r\n        this.idClicked = idClicked;\r\n    }\r\n\r\n    render() {\r\n        const { language }      = this.props;\r\n        const { moviesList,idMoviesList }    = this.state;\r\n        let isLink              = true;\r\n        let title               = \"\";\r\n        let notFavorite         = \"\";\r\n        if (language === 'en') {\r\n            title       = \"My List\";\r\n            notFavorite = \"You don't have any favorites yet\"\r\n        } else if (language === 'fr') {\r\n            title       = \"Ma Liste\";\r\n            notFavorite = \"Vous n'avez pas encore de favoris\";\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">{title}</h1>\r\n                <div className=\"row text-center\">\r\n                    {idMoviesList ?\r\n                        (moviesList.map((movie, index) => {\r\n                            return(\r\n                                <div className=\"col-12 col-lg-3\" key={index}>\r\n                                    <Card \r\n                                        isLink={isLink}\r\n                                        movie={movie} \r\n                                        key={movie.id}\r\n                                        onClickCard={this.onClickCard}\r\n                                        language={language}                 \r\n                                    />\r\n                                </div>\r\n                                )\r\n                            })\r\n                        ) : (\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2>{notFavorite}</h2>                                                                     \r\n                            </div>\r\n                        )                    \r\n                    }                \r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyList;","import React, { Component } from 'react';\r\nimport Config from '../../Config';\r\n\r\nimport picture1 from '../../picture1.png';\r\nimport picture2 from '../../picture2.png';\r\nimport './CardActor.css';\r\n\r\nclass CardActor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { actor, language, key } = this.props;\r\n        let src = '';\r\n        let alt = '';\r\n        if (actor.profile !== null) {\r\n            src = Config.IMG_ROOT + actor.profile;\r\n            alt = 'Poster of ' + actor.name;\r\n        } else {\r\n            if (actor.gender === 1) {\r\n                src = picture1\r\n                alt = 'picture 1'\r\n            } else if (actor.gender === 2) {\r\n                src = picture2\r\n                alt = 'picture 2'\r\n            }\r\n            \r\n        }\r\n\r\n        let character = '';\r\n        if (language === \"en\") {\r\n            character = 'Character : ';\r\n        } else if (language === \"fr\") {\r\n            character = 'Personnage : ';\r\n        }\r\n\r\n        return(\r\n            <div className=\"card\" key={key}>                \r\n                <img src={src} className=\"card-img-top\" alt={alt} />\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{actor.name}</h6>\r\n                    <p className=\"card-text\">{character}{actor.character}</p>\r\n                </div>  \r\n            </div>            \r\n        );\r\n    }    \r\n}\r\n\r\nexport default CardActor;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CardActor from '../actor/CardActor';\r\nimport Button from '../core/Button';\r\nimport Icon from '../core/Icon';\r\nimport Config from '../../Config';\r\n\r\nimport './Details.css';\r\n\r\nclass Details extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idMovie: 0,\r\n            detailsMovie: {},\r\n            trailerMovie: {},\r\n            actors: [],\r\n            idMoviesList: this.getLocalStorage(),\r\n        }\r\n        this.onClickFavorite = this.onClickFavorite.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let id = this.props.match.params.id;\r\n        // console.log(id);\r\n        let urlCourante = document.location.href;\r\n        let arrUrl = urlCourante.split('/');\r\n        let idMovie = arrUrl[arrUrl.length-1];\r\n        this.setState({\r\n            idMovie\r\n        })\r\n        this.chargedDetailsMovie(idMovie);\r\n        this.chargedActors(idMovie);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        console.log('Details#componentDidUpdate');\r\n        if (prevProps.value !== this.props.value) {\r\n            this.chargedDetailsMovie(this.state.idMovie)\r\n        }\r\n    }\r\n\r\n    chargedDetailsMovie(idMovie) {\r\n        const url = `${Config.API_ROOT}movie/${idMovie}?api_key=${Config.API_KEY}&language=${this.props.language}`;\r\n        fetch(url).then((response) => response.json()).then(json => {\r\n            let detailsMovie = {};\r\n            detailsMovie.id             = json.id;\r\n            detailsMovie.title          = json.title;\r\n            detailsMovie.originalTitle  = json.original_title;\r\n            detailsMovie.poster         = json.poster_path;\r\n            detailsMovie.description    = json.overview;\r\n            detailsMovie.date           = json.release_date;\r\n            detailsMovie.genres         = json.genres;\r\n            this.setState({\r\n                detailsMovie\r\n            })\r\n        })\r\n        const urlTrailer = `${Config.API_ROOT}movie/${idMovie}/videos?api_key=${Config.API_KEY}&language=${this.props.language}`;\r\n        fetch(urlTrailer).then((response) => response.json()).then(json => {\r\n            let trailerMovie = {};\r\n            trailerMovie.id = json.id;\r\n            if (json.results[0] !== undefined) {\r\n                trailerMovie.key = json.results[0].key;\r\n                this.setState({\r\n                    trailerMovie\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    chargedActors(idMovie) {\r\n        const urlActor = `${Config.API_ROOT}movie/${idMovie}/casts?api_key=${Config.API_KEY}`;\r\n        fetch(urlActor).then((response) => response.json()).then(json => {\r\n            let actorTemp = {};\r\n            let actors = [];\r\n            json.cast.map((actor) => {\r\n                actorTemp                = {};\r\n                actorTemp.character      = actor.character;\r\n                actorTemp.name           = actor.name;\r\n                actorTemp.profile        = actor.profile_path;\r\n                actorTemp.gender         = actor.gender;\r\n                actors.push(actorTemp);\r\n                this.setState({\r\n                    actors\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    getLocalStorage() {\r\n        let idMoviesList = localStorage.getItem('myList');\r\n        idMoviesList = JSON.parse(idMoviesList);\r\n        return idMoviesList\r\n    }\r\n\r\n    onClickFavorite(idMovie) {\r\n        if (this.state.idMoviesList) {\r\n            if (this.state.idMoviesList.indexOf(idMovie) !== -1) {\r\n                console.log('this.state.idMoviesList.indexOf(idMovie)', this.state.idMoviesList.indexOf(idMovie))\r\n                const result = this.state.idMoviesList.filter(id => id !== idMovie);\r\n                this.setState ({\r\n                    idMoviesList : result\r\n                })\r\n                localStorage.setItem(\"myList\", JSON.stringify(result));\r\n            } else {\r\n                console.log('onClickFavorite else')\r\n                const storageStr = localStorage.getItem('myList');\r\n                let myList = [];\r\n                if (storageStr !== null) {\r\n                    myList = JSON.parse(storageStr);\r\n                }\r\n                myList.push(idMovie);\r\n                localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n            }\r\n        } else {\r\n            console.log('onClickFavorite else')\r\n            const storageStr = localStorage.getItem('myList');\r\n            let myList = [];\r\n            if (storageStr !== null) {\r\n                myList = JSON.parse(storageStr);\r\n            }\r\n            myList.push(idMovie);\r\n            localStorage.setItem(\"myList\", JSON.stringify(myList))\r\n        }        \r\n    }\r\n\r\n    render(){        \r\n        const { language } = this.props;\r\n        const { detailsMovie, idMoviesList, trailerMovie, actors } = this.state;\r\n        let genres = {...detailsMovie};\r\n        genres = genres.genres;\r\n        const src = Config.IMG_ROOT + detailsMovie.poster;\r\n        const alt = 'Poster of ' + detailsMovie.title;\r\n        const urlTrailer = Config.TRAILER_ROOT + trailerMovie.key;\r\n        let releaseDate = '';\r\n        let returnButton = '';\r\n        if (language === \"en\") {\r\n            releaseDate = 'Release Date : ';\r\n            returnButton = 'Return';\r\n        } else if (language === \"fr\") {\r\n            releaseDate = 'Date de Sortie : ';\r\n            returnButton = 'Retour';\r\n        }\r\n        let icon = '';\r\n        if (idMoviesList) {\r\n            if (idMoviesList.includes(detailsMovie.id)) {\r\n                icon = 'favorite'\r\n            } else {\r\n                icon = 'favorite_border'\r\n            }\r\n        } else {\r\n            icon = 'favorite_border'\r\n        }\r\n        \r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-3\">\r\n                        <img className=\"img_details\" src={src} alt={alt} />\r\n                        <Link to={'/popular'}>\r\n                            <Button>\r\n                                {returnButton}\r\n                            </Button>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <h1 className=\"text-center\">{detailsMovie.title}</h1> \r\n                        <Icon \r\n                            onClickFavorite = {this.onClickFavorite}\r\n                            icon = {icon}\r\n                            id = {detailsMovie.id }\r\n                        />                       \r\n                        <h4 className=\"text-center mt-3\">{detailsMovie.originalTitle}</h4>\r\n                        <div className=\"row mb-3\">\r\n                            {genres === undefined ? '' : genres.map((genre, i) => <div className=\"col-2 movie-genre text-center\" key={i}>{genre.name}</div>)}\r\n                        </div>\r\n                        <h5>Synopsie : </h5>\r\n                        <p>{detailsMovie.description}</p>\r\n                        <h6>{releaseDate}{detailsMovie.date}</h6>\r\n                        {trailerMovie.key === undefined ? '' : \r\n                            <button type=\"button\" className=\"btn btn-primary video-btn mt-5\" data-toggle=\"modal\" data-src={urlTrailer} data-target=\"#myModal\">\r\n                                {language === 'fr' ? 'Voir la bande annonce' : 'See the trailer'}\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <h2>Actors</h2>\r\n                <div className=\"row justify-content-between\">                    \r\n                    {actors.map((actor, index) => {\r\n                        return(\r\n                            <CardActor \r\n                                actor={actor}\r\n                                language={language}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                {/* -- Modal -- */}\r\n                <div className=\"modal fade\" id=\"myModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>        \r\n                                {/* -- 16:9 aspect ratio -- */}\r\n                                <div className=\"embed-responsive embed-responsive-16by9\">\r\n                                    <iframe className=\"embed-responsive-item\" src={urlTrailer} id=\"video\"  allowscriptaccess=\"always\" allow=\"autoplay\"></iframe>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* <iframe width=\"560\" height=\"315\" src={urlTrailer} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details","import React, { Component } from 'react';\r\nimport './Discover.css';\r\n\r\nclass NotFound extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 className=\"mt-5\">Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './components/Navbar';\nimport Discover from './components/Discover';\nimport DiscoverBattle from './components/DiscoverBattle';\nimport Popular from './components/Popular';\nimport PopularBattle from './components/PopularBattle';\nimport MyList from './components/MyList';\nimport Details from './components/movie/Details';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      language: 'en',\n      value: false,\n    }\n    this.onChangeLanguage = this.onChangeLanguage.bind(this);\n  }\n\n  onChangeLanguage(language) {\n    this.setState({\n      language\n    });\n    this.setState(({ value }) => ({ value: !value }))\n  }\n  \n\n  render() {\n    const { language, value } = this.state;\n    return(\n      \n        <>\n          <Router>\n            <Navbar onChangeLanguage={this.onChangeLanguage} language={language}/>          \n            <Switch>\n              <Route exact path=\"/\">\n                <Discover \n                  language={language} \n                  value={value} />\n              </Route>\n              <Route exact path=\"/week_battle\">\n                <DiscoverBattle \n                  language={language} \n                  value={value} />\n              </Route>\n              <Route exact path=\"/popular\">\n                <Popular \n                  language={language} \n                  value={value}/>\n              </Route>\n              <Route exact path=\"/popular_battle\">\n                <PopularBattle \n                  language={language} \n                  value={value}/>\n              </Route>\n              <Route exact path=\"/my_list\">\n                <MyList \n                  language={language} \n                  value={value}/>\n              </Route>\n              <Route path=\"/movie_detail/:id\">\n                <Details \n                  language={language} \n                  value={value}/>\n              </Route>\n              <Route component={NotFound} />           \n            </Switch>\n          </Router>\n        </>\n      \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}